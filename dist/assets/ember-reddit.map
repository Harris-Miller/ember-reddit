{"version":3,"sources":["ember-reddit/adapters/about.js","ember-reddit/adapters/comments.js","ember-reddit/adapters/subreddit.js","ember-reddit/adapters/user.js","ember-reddit/app.js","ember-reddit/components/thumbnail-preview.js","ember-reddit/components/time-ago.js","ember-reddit/components/vote-score.js","ember-reddit/controllers/comments.js","ember-reddit/controllers/sidepanel.js","ember-reddit/controllers/subreddit.js","ember-reddit/helpers/format-number.js","ember-reddit/initializers/ember-cli-auto-register-helpers.js","ember-reddit/initializers/export-application-global.js","ember-reddit/initializers/inject-store.js","ember-reddit/mixins/subreddit-route.js","ember-reddit/models/store.js","ember-reddit/models/thing.js","ember-reddit/router.js","ember-reddit/routes/application.js","ember-reddit/routes/comments.js","ember-reddit/routes/index.js","ember-reddit/routes/subreddit.js","ember-reddit/routes/subreddit/index.js","ember-reddit/routes/subreddit/related.js","ember-reddit/routes/subreddit/sort.js","ember-reddit/routes/user.js","ember-reddit/templates/application.js","ember-reddit/templates/comments.js","ember-reddit/templates/components/thumbnail-preview.js","ember-reddit/templates/components/time-ago.js","ember-reddit/templates/components/vote-score.js","ember-reddit/templates/index.js","ember-reddit/templates/partials/media-embed.js","ember-reddit/templates/partials/self-text.js","ember-reddit/templates/sidepanel.js","ember-reddit/templates/subreddit.js","ember-reddit/templates/subreddit/index.js","ember-reddit/templates/subreddit/related.js","ember-reddit/templates/t1row.js","ember-reddit/templates/t3row.js","ember-reddit/templates/tabmenu/comments.js","ember-reddit/templates/tabmenu/subreddit.js","ember-reddit/templates/thing.js","ember-reddit/templates/user.js","ember-reddit/tests/adapters/about.jshint.js","ember-reddit/tests/adapters/comments.jshint.js","ember-reddit/tests/adapters/subreddit.jshint.js","ember-reddit/tests/adapters/user.jshint.js","ember-reddit/tests/app.jshint.js","ember-reddit/tests/components/thumbnail-preview.jshint.js","ember-reddit/tests/components/time-ago.jshint.js","ember-reddit/tests/components/vote-score.jshint.js","ember-reddit/tests/controllers/comments.jshint.js","ember-reddit/tests/controllers/sidepanel.jshint.js","ember-reddit/tests/controllers/subreddit.jshint.js","ember-reddit/tests/ember-reddit/tests/helpers/resolver.jshint.js","ember-reddit/tests/ember-reddit/tests/helpers/start-app.jshint.js","ember-reddit/tests/ember-reddit/tests/test-helper.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/adapters/about-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/adapters/application-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/adapters/comments-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/adapters/subreddit-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/adapters/user-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/components/thumbnail-preview-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/components/time-ago-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/components/vote-score-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/controllers/comments-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/controllers/sidepanel-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/controllers/subreddit-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/helpers/format-number-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/initializers/inject-store-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/mixins/subreddit-route-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/models/thing-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/routes/application-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/routes/comments-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/routes/index-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/routes/subreddit-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/routes/subreddit/index-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/routes/subreddit/related-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/routes/subreddit/sort-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/routes/user-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/utils/calc-children-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/utils/decode-html-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/utils/parse-listing-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/views/t1row-test.jshint.js","ember-reddit/tests/ember-reddit/tests/unit/views/t3row-test.jshint.js","ember-reddit/tests/helpers/format-number.jshint.js","ember-reddit/tests/helpers/resolver.js","ember-reddit/tests/helpers/start-app.js","ember-reddit/tests/initializers/inject-store.jshint.js","ember-reddit/tests/mixins/subreddit-route.jshint.js","ember-reddit/tests/models/store.jshint.js","ember-reddit/tests/models/thing.jshint.js","ember-reddit/tests/router.jshint.js","ember-reddit/tests/routes/application.jshint.js","ember-reddit/tests/routes/comments.jshint.js","ember-reddit/tests/routes/index.jshint.js","ember-reddit/tests/routes/subreddit.jshint.js","ember-reddit/tests/routes/subreddit/index.jshint.js","ember-reddit/tests/routes/subreddit/related.jshint.js","ember-reddit/tests/routes/subreddit/sort.jshint.js","ember-reddit/tests/routes/user.jshint.js","ember-reddit/tests/test-helper.js","ember-reddit/tests/unit/adapters/about-test.js","ember-reddit/tests/unit/adapters/application-test.js","ember-reddit/tests/unit/adapters/comments-test.js","ember-reddit/tests/unit/adapters/subreddit-test.js","ember-reddit/tests/unit/adapters/user-test.js","ember-reddit/tests/unit/components/thumbnail-preview-test.js","ember-reddit/tests/unit/components/time-ago-test.js","ember-reddit/tests/unit/components/vote-score-test.js","ember-reddit/tests/unit/controllers/comments-test.js","ember-reddit/tests/unit/controllers/sidepanel-test.js","ember-reddit/tests/unit/controllers/subreddit-test.js","ember-reddit/tests/unit/helpers/format-number-test.js","ember-reddit/tests/unit/initializers/inject-store-test.js","ember-reddit/tests/unit/mixins/subreddit-route-test.js","ember-reddit/tests/unit/models/thing-test.js","ember-reddit/tests/unit/routes/application-test.js","ember-reddit/tests/unit/routes/comments-test.js","ember-reddit/tests/unit/routes/index-test.js","ember-reddit/tests/unit/routes/subreddit-test.js","ember-reddit/tests/unit/routes/subreddit/index-test.js","ember-reddit/tests/unit/routes/subreddit/related-test.js","ember-reddit/tests/unit/routes/subreddit/sort-test.js","ember-reddit/tests/unit/routes/user-test.js","ember-reddit/tests/unit/utils/calc-children-test.js","ember-reddit/tests/unit/utils/decode-html-test.js","ember-reddit/tests/unit/utils/parse-listing-test.js","ember-reddit/tests/unit/views/t1row-test.js","ember-reddit/tests/unit/views/t3row-test.js","ember-reddit/tests/utils/calc-children.jshint.js","ember-reddit/tests/utils/decode-html.jshint.js","ember-reddit/tests/utils/parse-listing.jshint.js","ember-reddit/tests/views/t1row.jshint.js","ember-reddit/tests/views/t3row.jshint.js","ember-reddit/utils/calc-children.js","ember-reddit/utils/decode-html.js","ember-reddit/utils/parse-listing.js","ember-reddit/views/t1row.js","ember-reddit/views/t3row.js","vendor/ember-cli/app-suffix.js"],"sourcesContent":["define(\"ember-reddit/adapters/about\", \n  [\"ember\",\"ic-ajax\",\"ember-reddit/models/thing\",\"ember-reddit/utils/parse-listing\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ajax = __dependency2__[\"default\"];\n    var thing = __dependency3__[\"default\"];\n    var parseListing = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Object.extend({\n    \tfind: function(name, params) {\n\n    \t\t//params = $.extend({}, params);\n    \t\tvar isFrontpage = false;\n\n    \t\t// build the url\n    \t\tvar url = 'https://www.reddit.com/';\n\n    \t\t// add subreddit\n    \t\tif (params.subreddit) {\n    \t\t\turl += 'r/' + params.subreddit;\n    \t\t}\n    \t\telse {\n    \t\t\tisFrontpage = true;\n    \t\t}\n\n    \t\t// if we're not on the frontpage\n    \t\tif (!isFrontpage) {\n    \t\t\treturn ajax({\n    \t\t\t\turl: url + '/about.json'\n    \t\t\t}).then(function(result) {\n    \t\t\t\treturn thing.create(result);\n    \t\t\t})\n    \t\t}\n\n    \t\t// else, just return an instance of thing with an empty object to it's constructor\n    \t\treturn Ember.RSVP.resolve(thing.create({}));\n    \t}\n    });\n  });","define(\"ember-reddit/adapters/comments\", \n  [\"ember\",\"ic-ajax\",\"ember-reddit/utils/parse-listing\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ajax = __dependency2__[\"default\"];\n    var parseListing = __dependency3__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Object.extend({\n    \tfind: function(name, params) {\n\n    \t\tconsole.log(params);\n\n    \t\t// build the url\n    \t\tvar url = 'https://www.reddit.com/comments/' + params.name;\n\n    \t\t// remove unwanted keys on params\n    \t\tdelete params.subreddit;\n    \t\tdelete params.name;\n\n    \t\tfor (var key in params) {\n    \t\t\tif (params[key] === null) {\n    \t\t\t\tdelete params[key];\n    \t\t\t}\n    \t\t}\n\n    \t\t// make ajax call and return Ember.Object of listing\n    \t\treturn ajax({\n    \t\t\turl: url + '.json',\n    \t\t\tdata: params\n    \t\t}).then(function(result) {\n\n    \t\t\t// assume two kinds, both 'listing'\n    \t\t\t// first is the post\n    \t\t\t// second are the list of comments\n    \t\t\treturn Ember.Object.create({\n    \t\t\t\tpost: parseListing(result[0]),\n    \t\t\t\tcomments: parseListing(result[1])\n    \t\t\t});\n    \t\t});\n    \t}\n    });\n  });","define(\"ember-reddit/adapters/subreddit\", \n  [\"ember\",\"ic-ajax\",\"ember-reddit/models/thing\",\"ember-reddit/utils/parse-listing\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ajax = __dependency2__[\"default\"];\n    var thing = __dependency3__[\"default\"];\n    var parseListing = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Object.extend({\n    \tfind: function(name, params) {\n\n    \t\t// build the url\n    \t\tvar url = 'https://www.reddit.com/';\n\n    \t\t// add subreddit and sort onto url, then remove prop from params, as we don't want them in the ajax:data\n    \t\tif (params.subreddit) {\n    \t\t\turl += 'r/' + params.subreddit;\n    \t\t\tdelete params.subreddit;\n    \t\t}\n\n    \t\tif (params.sort) {\n    \t\t\turl += '/' + params.sort;\n    \t\t\tdelete params.sort;\n    \t\t}\t\t\n\n    \t\tfor (var key in params) {\n    \t\t\tif (params[key] === null) {\n    \t\t\t\tdelete params[key];\n    \t\t\t}\n    \t\t}\n\n    \t\t// make ajax call and return Ember.Object of listing\n    \t\treturn ajax({\n    \t\t\turl: url + '.json',\n    \t\t\tdata: params\n    \t\t}).then(function(result) {\n    \t\t\treturn parseListing(result);\n    \t\t});\n    \t}\n    });\n  });","define(\"ember-reddit/adapters/user\", \n  [\"ember\",\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ajax = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Object.extend({\n    \tfind: function(name, id) {\n    \t\t\n    \t\treturn ajax('https://www.reddit.com/user/' + id + '.json').then(function(result) {\n    \t\t\treturn result.data;\n    \t\t});\n    \t}\n    });\n  });","define(\"ember-reddit/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"ember-reddit/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });","define(\"ember-reddit/components/thumbnail-preview\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n    \ttagName: 'a',\n    \tclassNames: ['thumbnail'],\n    \tclassNameBindings: ['isSelf:self', 'isDefault:default', 'isNsfw:nsfw'],\n    \tattributeBindings: ['url:href'],\n\n    \tisSelf: Ember.computed('src', function() {\n    \t\treturn this.get('src') === 'self';\n    \t}),\n\n    \tisDefault: Ember.computed('src', function() {\n    \t\treturn this.get('src') === 'default' || this.get('src') === '';\n    \t}),\n\n    \thasValidSrc: Ember.computed('src', function() {\n    \t\tvar src = this.get('src');\n    \t\treturn !(!src || this.get('isSelf') || this.get('isDefault'));\n    \t})\n    });\n  });","define(\"ember-reddit/components/time-ago\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n    \ttagName: 'time',\n    \tattributeBindings: ['utc:title', 'iso8601:datetime'],\n\n    \tdateMoment: Ember.computed('datetime', function() {\n    \t\treturn moment.unix(this.get('datetime')).utc();\n    \t}),\n\n    \tiso8601: Ember.computed('dateMoment', function() {\n    \t\treturn this.get('dateMoment').format();\n    \t}),\n\n    \tutc: Ember.computed('dateMoment', function() {\n    \t\treturn this.get('dateMoment').format('ddd MMM HH:mm:ss YYYY z');\n    \t}),\n\n    \tago: Ember.computed('dateMoment', function() {\n    \t\treturn this.get('dateMoment').fromNow();\n    \t}),\n\n    \tfrom: Ember.computed('dateMoment', function() {\n    \t\treturn this.get('dateMoment').fromNow(true);\n    \t}),\n\n    \tnoSuffix: false\n    });\n  });","define(\"ember-reddit/components/vote-score\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n    \ttagName: 'div',\n    \tclassNames: ['midcol'],\n    \tclassNameBindings: ['like:likes:dislikes', 'voted::unvoted'],\n\n    \tshowScore: true,\n\n    \tdisplayScore: Ember.computed('score', 'likes', function() {\n    \t\tif (this.get('likes') === true) {\n    \t\t\treturn this.get('score') + 1;\n    \t\t}\n    \t\telse if (this.get('likes') === false) {\n    \t\t\treturn this.get('score') - 1;\n    \t\t}\n    \t\telse {\n    \t\t\treturn this.get('score');\n    \t\t}\n    \t}),\n\n    \tvoted: Ember.computed('likes', function() {\n    \t\treturn this.get('likes') !== null;\n    \t}),\n\n    \tlike: Ember.computed('likes', function() {\n    \t\treturn this.get('likes') !== true;\n    \t})\n\n    });\n  });","define(\"ember-reddit/controllers/comments\", \n  [\"ember\",\"ember-reddit/utils/calc-children\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var calcChildren = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n    \tqueryParams: ['sort'],\n    \tsort: null,\n\n    \tcurrentSub: null,\n\n    \thasPost: Ember.computed('model.listings.post.children', function() {\n    \t\tvar postChildren = this.get('model.listings.post.children');\n    \t\treturn postChildren && postChildren.length !== 0;\n    \t}),\n\n    \tpostThing: Ember.computed('model.listings.post.children', function() {\n    \t\treturn this.get('model.listings.post.children').objectAt(0);\n    \t}),\n\n    \ttotalNumComments: Ember.computed('model.listings.comments', function() {\n    \t\treturn calcChildren(this.get('model.listings.comments'));\n    \t}),\n\n    \tplurarizeComment: Ember.computed('totalNumComments', function() {\n    \t\treturn this.get('totalNumComments') === 1 ? 'comment' : 'comments';\n    \t})\n    });\n  });","define(\"ember-reddit/controllers/sidepanel\", \n  [\"ember\",\"ember-reddit/utils/decode-html\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var decodeHtml = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n\n    \thasModel: Ember.computed('model.data', function() {\n    \t\treturn !!this.get('model.data');\n    \t}),\n\n    \trenderedDescription: Ember.computed('model.data.description_html', function() {\n    \t\treturn decodeHtml(this.get('model.data.description_html'));\n    \t}),\n\n    \tsubscribersString: Ember.computed('model.data.subscribers', function() {\n    \t\tvar subscribers = this.get('model.data.subscribers');\n\n    \t\tif (Ember.$.isNumeric(subscribers)) {\n    \t\t\treturn subscribers.toLocaleString();\n    \t\t}\n\n    \t\treturn '';\n    \t}),\n\n    \tactiveAccountsString: Ember.computed('model.data.accounts_active', function() {\n    \t\tvar accounts = this.get('model.data.accounts_active');\n\n    \t\tif (Ember.$.isNumeric(accounts)) {\n    \t\t\treturn accounts.toLocaleString();\n    \t\t}\n\n    \t\treturn '';\n    \t})\n    });\n  });","define(\"ember-reddit/controllers/subreddit\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n    \tqueryParams: ['t', 'count', 'after', 'before'],\n    \tt: null,\n    \tcount: null,\n    \tafter: null,\n    \tbefore: null,\n\n    \tcurrentSub: null,\n\n    \tisFrontpage: false,\n\n    \thasAfter: Ember.computed('model.listing.after', function() {\n    \t\treturn !!this.get('model.listing.after');\n    \t}),\n\n    \thasBefore: Ember.computed('model.listing.before', function() {\n    \t\treturn !!this.get('model.listing.before');\n    \t}),\n\n    \tnextCount: Ember.computed('count', function() {\n    \t\tif (!!this.get('count')) {\n    \t\t\treturn this.get('count') * 2;\n    \t\t}\n\n    \t\treturn 25;\n    \t}),\n\n    \tprevCount: Ember.computed('count', function() {\n    \t\tif (!!this.get('count')) {\n    \t\t\treturn parseInt(this.get('count'), 10) + 1;\n    \t\t}\n\n    \t\treturn 0;\n    \t})\n    });\n  });","define(\"ember-reddit/helpers/format-number\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    function formatNumber(input) {\n    \tif (!Ember.$.isNumeric(input)) {\n    \t\tEmber.Logger.warn('value for input was not Numeric');\n    \t\treturn '--';\n    \t}\n\n    \tvar value = parseInt(input, 10);\n\n    \tif (value > 0) {\n    \t\treturn new Ember.Handlebars.SafeString('<span class=\"pos\">' + input + '</span>');\n    \t}\n    \telse if (value < 0) {\n    \t\treturn new Ember.Handlebars.SafeString('<span class=\"neg\">' + input + '</span>');\n    \t}\n    \telse {\n    \t\treturn input;\n    \t}\n    }\n\n    __exports__.formatNumber = formatNumber;__exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(formatNumber);\n  });","define(\"ember-reddit/initializers/ember-cli-auto-register-helpers\", \n  [\"ember\",\"ember-reddit/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var initialize = function() {\n      var matcher = new RegExp(config.modulePrefix + '/helpers/.*');\n\n      Ember.A(Ember.keys(window.require.entries)).filter(function(path) {\n        return matcher.test(path);\n      }).forEach(function(path) {\n        var helperName = path.replace(config.modulePrefix + '/helpers/','');\n        Ember.Handlebars.registerHelper(helperName, window.require(path)['default']);\n      });\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: 'ember-cli-auto-register-helpers',\n\n      initialize: initialize\n    };\n  });","define(\"ember-reddit/initializers/export-application-global\", \n  [\"ember\",\"ember-reddit/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: 'export-application-global',\n\n      initialize: initialize\n    };\n  });","define(\"ember-reddit/initializers/inject-store\", \n  [\"ember-reddit/models/store\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Store = __dependency1__[\"default\"];\n\n    function initialize(container, app) {\n    \tapp.register('store:main', Store);\n    \tapp.inject('route', 'store', 'store:main');\n    \tapp.inject('controller', 'store', 'store:main');\n    }\n\n    __exports__.initialize = initialize;__exports__[\"default\"] = {\n    \tname: 'inject-store',\n    \tinitialize: initialize\n    };\n  });","define(\"ember-reddit/mixins/subreddit-route\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Mixin.create({\n    \tqueryParams: {\n    \t\tt: { refreshModel: true },\n    \t\tcount: { refreshModel: true },\n    \t\tafter: { refreshModel: true },\n    \t\tbefore: { refreshModel: true }\n    \t},\n\n    \tcontrollerName: 'subreddit',\n    \ttemplateName: 'subreddit/index',\n\n    \tmodel: function(params) {\n    \t\tparams.subreddit = params.subreddit || this.paramsFor('subreddit').subreddit;\n\n    \t\t// need to use unique instances of params for each of these\n    \t\treturn Ember.RSVP.hash({\n    \t\t\tlisting: this.store.find('subreddit', Ember.$.extend({}, params)),\n    \t\t\tabout: this.store.find('about', Ember.$.extend({}, params))\n    \t\t});\n    \t},\n\n    \tafterModel: function(model, transition) {\n    \t\t// console.log(transition);\n    \t\t// console.log(this.get('router'));\n    \t},\n\n    \tsetupController: function(controller, model) {\n    \t\tvar isBefore = !!this.controller.get('before');\n    \t\tvar count = parseInt(this.controller.get('count'), 10) || 1;\n\n    \t\t// adjust account for when isBefore\n    \t\tif (isBefore && count !== 1) {\n    \t\t\tcount = count - 25;\n    \t\t}\n\n    \t\tfor (var i = 0; i < model.listing.get('children').length; i++) {\n    \t\t\tmodel.listing.get('children')[i].data.index = count + i;\n    \t\t}\n\n    \t\tthis._super(controller, model);\n\n    \t\tcontroller.set('isFrontpage', false);\n\n    \t\tcontroller.set('currentSub', this.paramsFor('subreddit').subreddit);\n    \t},\n\n    \trenderTemplate: function(controller, model) {\n    \t\tthis._super();\n\n    \t\tthis.render('tabmenu/subreddit', {\n    \t\t\tinto: 'application',\n    \t\t\toutlet: 'tabmenu',\n    \t\t\tcontroller: 'subreddit'\n    \t\t});\n\n    \t\tthis.render('sidepanel', {\n    \t\t\tinto: 'application',\n    \t\t\toutlet: 'sidepanel',\n    \t\t\tcontroller: 'sidepanel',\n    \t\t\tmodel: model.about\n    \t\t});\n    \t}\n    });\n  });","define(\"ember-reddit/models/store\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    \r\n    __exports__[\"default\"] = Ember.Object.extend({\r\n    \tfind: function(name, params) {\r\n    \r\n    \t\tvar adapter = this.container.lookup('adapter:' + name);\r\n    \t\treturn adapter.find(name, params).then(function(record) {\r\n    \t\t\treturn record;\r\n    \t\t});\r\n    \t}\r\n    });\n  });","define(\"ember-reddit/models/thing\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Object.extend({\n    \tisT1: Ember.computed('kind', function() {\n    \t\treturn this.get('kind') === 't1';\n    \t}),\n\n    \tisT2: Ember.computed('kind', function() {\n    \t\treturn this.get('kind') === 't2';\n    \t}),\n\n    \tisT3: Ember.computed('kind', function() {\n    \t\treturn this.get('kind') === 't3';\n    \t}),\n\n    \tisT4: Ember.computed('kind', function() {\n    \t\treturn this.get('kind') === 't4';\n    \t}),\n\n    \tisT5: Ember.computed('kind', function() {\n    \t\treturn this.get('kind') === 't5';\n    \t})\n    });\n  });","define(\"ember-reddit/router\", \n  [\"ember\",\"ember-reddit/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n    \tlocation: config.locationType\n    });\n\n    Router.map(function() {\n    \tthis.resource('subreddit', { path: 'r/:subreddit' }, function() {\n    \t\tthis.route('sort', { path: ':sort' });\n\n    \t\tthis.resource('comments', { path: 'comments/:name' });\n    \t\tthis.resource('related', { path: 'related/:name' })\n    \t});\n\n    \tthis.route('user', { path: 'u/:user' });\n\n    \tthis.route('domain', { path: 'domain/:domain' });\n    });\n\n    __exports__[\"default\"] = Router;\n  });","define(\"ember-reddit/routes/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    });\n  });","define(\"ember-reddit/routes/comments\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n    \tmodel: function(params) {\n    \t\tparams.subreddit = this.paramsFor('subreddit').subreddit;\n\n    \t\treturn Ember.RSVP.hash({\n    \t\t\tlistings: this.store.find('comments', Ember.$.extend({}, params)),\n    \t\t\tabout: this.store.find('about', Ember.$.extend({}, params))\n    \t\t});\n    \t},\n\n    \tsetupController: function(controller, model) {\n    \t\tthis._super(controller, model);\n\n    \t\t// TODO, remove this\n    \t\tcontroller.set('currentSub', this.paramsFor('subreddit').subreddit);\n    \t},\n\n    \trenderTemplate: function(controller, model) {\n    \t\tthis._super();\n\n    \t\tthis.render('tabmenu/comments', {\n    \t\t\tinto: 'application',\n    \t\t\toutlet: 'tabmenu',\n    \t\t\tcontroller: controller,\n    \t\t\tmodel: model\n    \t\t});\n\n    \t\tthis.render('sidepanel', {\n    \t\t\tinto: 'application',\n    \t\t\toutlet: 'sidepanel',\n    \t\t\tcontroller: 'sidepanel',\n    \t\t\tmodel: model.about\n    \t\t});\n    \t}\n    });\n  });","define(\"ember-reddit/routes/index\", \n  [\"ember\",\"ember-reddit/mixins/subreddit-route\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SubredditMixin = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend(SubredditMixin, {\n\n    \tsetupController: function(controller, model) {\n    \t\tthis._super(controller, model);\n    \t\tcontroller.set('isFrontpage', true);\n    \t}\n    });\n  });","define(\"ember-reddit/routes/subreddit\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    \r\n    __exports__[\"default\"] = Ember.Route.extend({\r\n    });\n  });","define(\"ember-reddit/routes/subreddit/index\", \n  [\"ember\",\"ember-reddit/mixins/subreddit-route\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SubredditRouteMixin = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend(SubredditRouteMixin, {\n    });\n  });","define(\"ember-reddit/routes/subreddit/related\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    });\n  });","define(\"ember-reddit/routes/subreddit/sort\", \n  [\"ember\",\"ember-reddit/mixins/subreddit-route\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SubredditRouteMixin = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend(SubredditRouteMixin, {\n    });\n  });","define(\"ember-reddit/routes/user\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    \tmodel: function(params) {\n    \t\treturn this.store.find('user', params.user_id);\n    \t}\n    });\n  });","define(\"ember-reddit/templates/application\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"<div id=\\\"header\\\">\\n\t<div id=\\\"sr-header-area\\\">\\n\t\ttodo: my subreddits\\n\t</div>\\n\t<div id=\\\"header-bottom-left\\\">\\n\t\t\");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"reddit.com\", \"application\", {\"name\":\"link-to\",\"hash\":{\n        'class': (\"default-header\"),\n        'id': (\"header-img\")\n      },\"hashTypes\":{'class': \"STRING\",'id': \"STRING\"},\"hashContexts\":{'class': depth0,'id': depth0},\"types\":[\"STRING\",\"STRING\"],\"contexts\":[depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"\\n\t\t\");\n      data.buffer.push(escapeExpression(((helpers.outlet || (depth0 && depth0.outlet) || helperMissing).call(depth0, \"tabmenu\", {\"name\":\"outlet\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\"],\"contexts\":[depth0],\"data\":data}))));\n      data.buffer.push(\"\\n\t</div>\\n</div>\\n\\n<div class=\\\"side\\\">\\n\t\");\n      data.buffer.push(escapeExpression(((helpers.outlet || (depth0 && depth0.outlet) || helperMissing).call(depth0, \"sidepanel\", {\"name\":\"outlet\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\"],\"contexts\":[depth0],\"data\":data}))));\n      data.buffer.push(\"\\n</div>\\n\\n<div class=\\\"content\\\" role=\\\"main\\\">\\n\t\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\\n<div class=\\\"footer-parent\\\">\\n\t<div class=\\\"footer rounded\\\">\\n\t\t<div class=\\\"col\\\">\\n\t\t\t<ul class=\\\"flat-vert hover\\\">\\n\t\t\t\t<li class=\\\"flat-vert title\\\">about</li>\\n\t\t\t\t<li><a href=\\\"http://www.reddit.com/blog/\\\" class=\\\"choice\\\">blog</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://www.reddit.com/about/\\\" class=\\\"choice\\\">about</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://www.reddit.com/about/team/\\\" class=\\\"choice\\\">team</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://www.reddit.com/code/\\\" class=\\\"choice\\\">source code</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://www.reddit.com/advertising/\\\" class=\\\"choice\\\">advertise</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://www.reddit.com/r/redditjobs/\\\" class=\\\"choice\\\">jobs</a></li>\\n\t\t\t</ul>\\n\t\t</div>\\n\t\t<div class=\\\"col\\\">\\n\t\t\t<ul class=\\\"flat-vert hover\\\">\\n\t\t\t\t<li class=\\\"flat-vert title\\\">help</li>\\n\t\t\t\t<li><a href=\\\"http://www.reddit.com/wiki/\\\" class=\\\"choice\\\">wiki</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://www.reddit.com/wiki/faq\\\" class=\\\"choice\\\">FAQ</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://www.reddit.com/wiki/reddiquette\\\" class=\\\"choice\\\">reddiquette</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://www.reddit.com/rules/\\\" class=\\\"choice\\\">rules</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://www.reddit.com/contact/\\\" class=\\\"choice\\\">contact us</a></li>\\n\t\t\t</ul>\\n\t\t</div>\\n\t\t<div class=\\\"col\\\">\\n\t\t\t<ul class=\\\"flat-vert hover\\\">\\n\t\t\t\t<li class=\\\"flat-vert title\\\">tools</li>\\n\t\t\t\t<li><a href=\\\"http://i.reddit.com\\\" class=\\\"choice\\\">mobile</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"https://addons.mozilla.org/firefox/addon/socialite/\\\" class=\\\"choice\\\">firefox extension</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"https://chrome.google.com/webstore/detail/algjnflpgoopkdijmkalfcifomdhmcbe\\\" class=\\\"choice\\\">chrome extension</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://www.reddit.com/buttons/\\\" class=\\\"choice\\\">buttons</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://www.reddit.com/widget/\\\" class=\\\"choice\\\">widget</a></li>\\n\t\t\t</ul>\\n\t\t</div>\\n\t\t<div class=\\\"col\\\">\\n\t\t\t<ul class=\\\"flat-vert hover\\\">\\n\t\t\t\t<li class=\\\"flat-vert title\\\">&lt;3</li>\\n\t\t\t\t<li><a href=\\\"http://www.reddit.com/gold/about/\\\" class=\\\"buygold choice\\\">reddit gold</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://www.reddit.com/store/\\\" class=\\\"choice\\\">store</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://redditgifts.com\\\" class=\\\"choice\\\">redditgifts</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"https://redditama.reddit.com\\\" class=\\\"choice\\\">reddit AMA app</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://reddit.tv\\\" class=\\\"choice\\\">reddit.tv</a></li>\\n\t\t\t\t<li><span class=\\\"separator\\\"></span><a href=\\\"http://radioreddit.com\\\" class=\\\"choice\\\">radio reddit</a></li>\\n\t\t\t</ul>\\n\t\t</div>\\n\t</div>\\n\t<p class=\\\"bottommenu\\\">By encrypter8 with love, for reddit.com, r/emberjs, and r/redditdev</p>\\n</div>\");\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/templates/comments\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n      var helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"\t\t\");\n      data.buffer.push(escapeExpression(((helpers.render || (depth0 && depth0.render) || helperMissing).call(depth0, \"thing\", \"postThing\", {\"name\":\"render\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\",\"ID\"],\"contexts\":[depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n    },\"3\":function(depth0,helpers,partials,data) {\n      data.buffer.push(\"\t\t<p id=\\\"noresults\\\" class=\\\"error\\\">theredoesn't seem to be anything here</p>\\n\");\n      },\"5\":function(depth0,helpers,partials,data) {\n      var helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"\t\t\t\");\n      data.buffer.push(escapeExpression(((helpers.render || (depth0 && depth0.render) || helperMissing).call(depth0, \"thing\", \"thing\", {\"name\":\"render\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\",\"ID\"],\"contexts\":[depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n    },\"7\":function(depth0,helpers,partials,data) {\n      data.buffer.push(\"\t\t\t<p id=\\\"noresults\\\" class=\\\"error\\\">theredoesn't seem to be anything here</p>\\n\");\n      },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      data.buffer.push(\"<div id=\\\"siteTable\\\" class=\\\"sitetable linklisting\\\">\\n\");\n      stack1 = helpers['if'].call(depth0, \"hasPost\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(1, data),\"inverse\":this.program(3, data),\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n\\n<div class=\\\"commentarea\\\">\\n\t<div class=\\\"panestack-title\\\">\\n\t\t<span class=\\\"title\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"totalNumComments\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"plurarizeComment\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n\t</div>\\n\t<div class=\\\"menuarea\\\"></div>\\n\t<div class=\\\"sitetable nestedlisting\\\">\\n\");\n      stack1 = helpers.each.call(depth0, \"thing\", \"in\", \"model.listings.comments.children\", {\"name\":\"each\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(5, data),\"inverse\":this.program(7, data),\"types\":[\"ID\",\"ID\",\"ID\"],\"contexts\":[depth0,depth0,depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\t</div>\\n</div>\");\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/templates/components/thumbnail-preview\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      stack1 = helpers.unless.call(depth0, \"isNsfw\", {\"name\":\"unless\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(2, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      return buffer;\n    },\"2\":function(depth0,helpers,partials,data) {\n      var escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"\t<img \");\n      data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {\"name\":\"bind-attr\",\"hash\":{\n        'src': (\"src\")\n      },\"hashTypes\":{'src': \"ID\"},\"hashContexts\":{'src': depth0},\"types\":[],\"contexts\":[],\"data\":data})));\n      data.buffer.push(\" width=\\\"70\\\" />\\n\");\n      return buffer;\n    },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var stack1;\n      stack1 = helpers['if'].call(depth0, \"hasValidSrc\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(1, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      else { data.buffer.push(''); }\n      },\"useData\":true});\n  });","define(\"ember-reddit/templates/components/time-ago\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      data.buffer.push(\"\t\");\n      stack1 = helpers._triageMustache.call(depth0, \"from\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\r\\n\");\n      return buffer;\n    },\"3\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      data.buffer.push(\"\t\");\n      stack1 = helpers._triageMustache.call(depth0, \"ago\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\r\\n\");\n      return buffer;\n    },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var stack1;\n      stack1 = helpers['if'].call(depth0, \"noSuffix\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(1, data),\"inverse\":this.program(3, data),\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      else { data.buffer.push(''); }\n      },\"useData\":true});\n  });","define(\"ember-reddit/templates/components/vote-score\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      data.buffer.push(\"\t<div class=\\\"score\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"displayScore\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n\");\n      return buffer;\n    },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      data.buffer.push(\"<div class=\\\"arrow up\\\"></div>\\n\");\n      stack1 = helpers['if'].call(depth0, \"showScore\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(1, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"<div class=\\\"arrow down\\\"></div>\");\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/templates/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/templates/partials/media-embed\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"<div class=\\\"expando\\\">\\r\\n\t\");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"view.renderedMediaEmbed\", {\"name\":\"_triageMustache\",\"hash\":{\n        'unescaped': (\"true\")\n      },\"hashTypes\":{'unescaped': \"STRING\"},\"hashContexts\":{'unescaped': depth0},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data})));\n      data.buffer.push(\"\\r\\n</div>\");\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/templates/partials/self-text\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"<div class=\\\"expando usertext\\\">\\r\\n\t<div class=\\\"usertext-body md-container\\\">\\r\\n\t\t\");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"view.renderedSelfText\", {\"name\":\"_triageMustache\",\"hash\":{\n        'unescaped': (\"true\")\n      },\"hashTypes\":{'unescaped': \"STRING\"},\"hashContexts\":{'unescaped': depth0},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data})));\n      data.buffer.push(\"\\r\\n\t</div>\\r\\n</div>\");\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/templates/sidepanel\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n      var stack1, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, buffer = '';\n      data.buffer.push(\"\t<div class=\\\"spacer\\\">\\r\\n\t\t<div class=\\\"titlebox\\\">\\r\\n\t\t\t<h1 class=\\\"hover redditname\\\">\\r\\n\t\t\t\t\");\n      stack1 = helpers._triageMustache.call(depth0, \"model.data.display_name\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\r\\n\t\t\t</h1>\\r\\n\\r\\n\t\t\t<span class=\\\"subscribe-button fancy-toggle-button toggle\\\">\\r\\n\t\t\t\t<a href=\\\"javascript:void(0)\\\" class=\\\"option active add\\\" tabindex=\\\"100\\\">subscribe</a>\\r\\n\t\t\t\t<a href=\\\"javascript:void(0)\\\" class=\\\"option remove\\\">unsubscribe</a>\\r\\n\t\t\t</span>\\r\\n\\r\\n\t\t\t<span class=\\\"subscriber\\\">\\r\\n\t\t\t\t<span class=\\\"number\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"subscribersString\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\r\\n\t\t\t\t<span class=\\\"word\\\">readers</span> \\r\\n\t\t\t</span>\\r\\n\\r\\n\t\t\t<p class=\\\"users-online fuzzed\\\" title=\\\"logged-in users viewing this subreddit in the past 15 minutes\\\">\\r\\n\t\t\t\t<span class=\\\"number\\\">~\");\n      stack1 = helpers._triageMustache.call(depth0, \"activeAccountsString\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\r\\n\t\t\t\t<span class=\\\"word\\\">users here now</span> \\r\\n\t\t\t</p>\\r\\n\\r\\n\t\t\t<div class=\\\"usertext-body md-container\\\">\\r\\n\t\t\t\t\");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"renderedDescription\", {\"name\":\"_triageMustache\",\"hash\":{\n        'unescaped': (\"true\")\n      },\"hashTypes\":{'unescaped': \"STRING\"},\"hashContexts\":{'unescaped': depth0},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data})));\n      data.buffer.push(\"\\r\\n\t\t\t</div>\\r\\n\\r\\n\t\t\t<div class=\\\"bottom\\\">\\r\\n\t\t\t\tcreated by <a href=\\\"javascript:void(0);\\\">TODO</a>\\r\\n\t\t\t\t<span class=\\\"userattrs\\\"></span>\\r\\n\t\t\t\t<span class=\\\"age\\\">\\r\\n\t\t\t\t\ta communitry for \");\n      data.buffer.push(escapeExpression(((helpers['time-ago'] || (depth0 && depth0['time-ago']) || helperMissing).call(depth0, {\"name\":\"time-ago\",\"hash\":{\n        'noSuffix': (true),\n        'datetime': (\"model.data.created_utc\")\n      },\"hashTypes\":{'noSuffix': \"BOOLEAN\",'datetime': \"ID\"},\"hashContexts\":{'noSuffix': depth0,'datetime': depth0},\"types\":[],\"contexts\":[],\"data\":data}))));\n      data.buffer.push(\"\\r\\n\t\t\t\t</span>\\r\\n\t\t\t</div>\\r\\n\\r\\n\t\t\t<div class=\\\"clear\\\"></div>\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n\");\n      return buffer;\n    },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      data.buffer.push(\"\\r\\n<div class=\\\"spacer\\\">\\r\\n\t<form id=\\\"search\\\" action=\\\"#\\\" role=\\\"search\\\">\\r\\n\t\t<input type=\\\"text\\\" name=\\\"q\\\" placeholder=\\\"search\\\" tabindex=\\\"20\\\">\\r\\n\t\t<input type=\\\"submit\\\" tabindex=\\\"22\\\" value>\\r\\n\t\t<div id=\\\"searchexpando\\\" class=\\\"infobar\\\" tabindex=\\\"20\\\">\\r\\n\t\t\t<label>\\r\\n\t\t\t\t<input type=\\\"checkbox\\\" name=\\\"restrict_sr\\\" tabindex=\\\"21\\\">\\r\\n\t\t\t\tlimit my search to \");\n      stack1 = helpers._triageMustache.call(depth0, \"model.data.url\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\" \\r\\n\t\t\t</label>\\r\\n\t\t\t<div id=\\\"moresearchinfo\\\">\\r\\n\t\t\t</div>\\r\\n\t\t\t<p>\\r\\n\t\t\t\t<a href=\\\"javascript:void(0)\\\" id=\\\"search_showmore\\\">advanced search: by author, subreddit...</a>\\r\\n\t\t\t</p>\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"spacer\\\">\\r\\n\t<div class=\\\"sidebox submit submit-link\\\">\\r\\n\t\t<div class=\\\"morelink\\\">\\r\\n\t\t\t<a href=\\\"javascript:void(0);\\\">Submit a new link</a>\\r\\n\t\t\t<div class=\\\"nub\\\"></div>\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"spacer\\\">\\r\\n\t<div class=\\\"sidebox submit submit-link\\\">\\r\\n\t\t<div class=\\\"morelink\\\">\\r\\n\t\t\t<a href=\\\"javascript:void(0);\\\">Submit a new text post</a>\\r\\n\t\t\t<div class=\\\"nub\\\"></div>\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n</div>\\r\\n\\r\\n\");\n      stack1 = helpers['if'].call(depth0, \"hasModel\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(1, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/templates/subreddit\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var stack1;\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      else { data.buffer.push(''); }\n      },\"useData\":true});\n  });","define(\"ember-reddit/templates/subreddit/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n      var helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"\t\t\");\n      data.buffer.push(escapeExpression(((helpers.render || (depth0 && depth0.render) || helperMissing).call(depth0, \"thing\", \"thing\", {\"name\":\"render\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\",\"ID\"],\"contexts\":[depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n    },\"3\":function(depth0,helpers,partials,data) {\n      data.buffer.push(\"\t\t<p id=\\\"noresults\\\" class=\\\"error\\\">theredoesn't seem to be anything here</p>\\n\");\n      },\"5\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      stack1 = helpers['if'].call(depth0, \"isFrontpage\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(6, data),\"inverse\":this.program(9, data),\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      return buffer;\n    },\"6\":function(depth0,helpers,partials,data) {\n      var stack1, helperMissing=helpers.helperMissing, buffer = '';\n      data.buffer.push(\"\t\t\t\t\t\");\n      stack1 = ((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"application\", ((helpers['query-params'] || (depth0 && depth0['query-params']) || helperMissing).call(depth0, {\"name\":\"query-params\",\"hash\":{\n        'before': (\"model.listing.before\"),\n        'count': (\"prevCount\")\n      },\"hashTypes\":{'before': \"ID\",'count': \"ID\"},\"hashContexts\":{'before': depth0,'count': depth0},\"types\":[],\"contexts\":[],\"data\":data})), {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(7, data),\"inverse\":this.noop,\"types\":[\"STRING\",\"sexpr\"],\"contexts\":[depth0,depth0],\"data\":data}));\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n    },\"7\":function(depth0,helpers,partials,data) {\n      data.buffer.push(\"‹ prev\");\n      },\"9\":function(depth0,helpers,partials,data) {\n      var stack1, helperMissing=helpers.helperMissing, buffer = '';\n      data.buffer.push(\"\t\t\t\t\t\");\n      stack1 = ((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"subreddit\", \"currentSub\", ((helpers['query-params'] || (depth0 && depth0['query-params']) || helperMissing).call(depth0, {\"name\":\"query-params\",\"hash\":{\n        'before': (\"model.listing.before\"),\n        'count': (\"prevCount\")\n      },\"hashTypes\":{'before': \"ID\",'count': \"ID\"},\"hashContexts\":{'before': depth0,'count': depth0},\"types\":[],\"contexts\":[],\"data\":data})), {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(7, data),\"inverse\":this.noop,\"types\":[\"STRING\",\"ID\",\"sexpr\"],\"contexts\":[depth0,depth0,depth0],\"data\":data}));\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n    },\"11\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      stack1 = helpers['if'].call(depth0, \"isFrontpage\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(12, data),\"inverse\":this.program(15, data),\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      return buffer;\n    },\"12\":function(depth0,helpers,partials,data) {\n      var stack1, helperMissing=helpers.helperMissing, buffer = '';\n      data.buffer.push(\"\t\t\t\t\t\");\n      stack1 = ((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"application\", ((helpers['query-params'] || (depth0 && depth0['query-params']) || helperMissing).call(depth0, {\"name\":\"query-params\",\"hash\":{\n        'after': (\"model.listing.after\"),\n        'count': (\"nextCount\")\n      },\"hashTypes\":{'after': \"ID\",'count': \"ID\"},\"hashContexts\":{'after': depth0,'count': depth0},\"types\":[],\"contexts\":[],\"data\":data})), {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(13, data),\"inverse\":this.noop,\"types\":[\"STRING\",\"sexpr\"],\"contexts\":[depth0,depth0],\"data\":data}));\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n    },\"13\":function(depth0,helpers,partials,data) {\n      data.buffer.push(\"next ›\");\n      },\"15\":function(depth0,helpers,partials,data) {\n      var stack1, helperMissing=helpers.helperMissing, buffer = '';\n      data.buffer.push(\"\t\t\t\t\t\");\n      stack1 = ((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"subreddit\", \"currentSub\", ((helpers['query-params'] || (depth0 && depth0['query-params']) || helperMissing).call(depth0, {\"name\":\"query-params\",\"hash\":{\n        'after': (\"model.listing.after\"),\n        'count': (\"nextCount\")\n      },\"hashTypes\":{'after': \"ID\",'count': \"ID\"},\"hashContexts\":{'after': depth0,'count': depth0},\"types\":[],\"contexts\":[],\"data\":data})), {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(13, data),\"inverse\":this.noop,\"types\":[\"STRING\",\"ID\",\"sexpr\"],\"contexts\":[depth0,depth0,depth0],\"data\":data}));\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n    },\"17\":function(depth0,helpers,partials,data) {\n      data.buffer.push(\"random subreddit\");\n      },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var stack1, helperMissing=helpers.helperMissing, buffer = '';\n      data.buffer.push(\"<div id=\\\"siteTable\\\" class=\\\"sitetable linklisting\\\">\\n\");\n      stack1 = helpers.each.call(depth0, \"thing\", \"in\", \"model.listing.children\", {\"name\":\"each\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(1, data),\"inverse\":this.program(3, data),\"types\":[\"ID\",\"ID\",\"ID\"],\"contexts\":[depth0,depth0,depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\t<div class=\\\"nav-buttons\\\">\\n\t\t<span class=\\\"nextprev\\\">\\n\t\t\tview more:\\n\");\n      stack1 = helpers['if'].call(depth0, \"hasBefore\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(5, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      stack1 = helpers['if'].call(depth0, \"hasAfter\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(11, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\t\t</span>\\n\t\t<span class=\\\"next-suggestions\\\">\\n\t\t\tor try a \");\n      stack1 = ((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"subreddit\", \"random\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(17, data),\"inverse\":this.noop,\"types\":[\"STRING\",\"STRING\"],\"contexts\":[depth0,depth0],\"data\":data}));\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\t\t</span>\\n\t</div>\\n</div>\");\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/templates/subreddit/related\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/templates/t1row\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n      data.buffer.push(\"\t\t\t\t[+]\\r\\n\");\n      },\"3\":function(depth0,helpers,partials,data) {\n      data.buffer.push(\"\t\t\t\t[-]\\r\\n\");\n      },\"5\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      data.buffer.push(\"\t\t\t<a href=\\\"javascript:void(0);\\\" class=\\\"numchildren\\\">(\");\n      stack1 = helpers._triageMustache.call(depth0, \"view.numChildren\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"view.plurarizeChild\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\")</a>\\r\\n\");\n      return buffer;\n    },\"7\":function(depth0,helpers,partials,data) {\n      var escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, buffer = '';\n      data.buffer.push(\"\t\t<div class=\\\"usertext-body md-container\\\">\\r\\n\t\t\t\");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"view.renderedBody\", {\"name\":\"_triageMustache\",\"hash\":{\n        'unescaped': (\"true\")\n      },\"hashTypes\":{'unescaped': \"STRING\"},\"hashContexts\":{'unescaped': depth0},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data})));\n      data.buffer.push(\"\\r\\n\t\t</div>\\r\\n\\r\\n\t\t<ul class=\\\"flat-list buttons\\\">\\r\\n\t\t\t<li class=\\\"first\\\">\\r\\n\t\t\t\t\");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"permalink\", \"comments\", \"subreddit\", \"id\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\",\"STRING\",\"ID\",\"ID\"],\"contexts\":[depth0,depth0,depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"\\r\\n\t\t\t</li>\\r\\n\t\t</ul>\\r\\n\");\n      return buffer;\n    },\"9\":function(depth0,helpers,partials,data) {\n      var escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"\t\t\t\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"t1row\", {\"name\":\"view\",\"hash\":{\n        'currentSub': (\"view.currentSub\"),\n        'context': (\"child.data\")\n      },\"hashTypes\":{'currentSub': \"ID\",'context': \"ID\"},\"hashContexts\":{'currentSub': depth0,'context': depth0},\"types\":[\"STRING\"],\"contexts\":[depth0],\"data\":data})));\n      data.buffer.push(\"\\r\\n\");\n      return buffer;\n    },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"<p class=\\\"parent\\\"></p>\\r\\n\");\n      data.buffer.push(escapeExpression(((helpers['vote-score'] || (depth0 && depth0['vote-score']) || helperMissing).call(depth0, {\"name\":\"vote-score\",\"hash\":{\n        'showScore': (false),\n        'likes': (\"likes\"),\n        'score': (\"score\")\n      },\"hashTypes\":{'showScore': \"BOOLEAN\",'likes': \"ID\",'score': \"ID\"},\"hashContexts\":{'showScore': depth0,'likes': depth0,'score': depth0},\"types\":[],\"contexts\":[],\"data\":data}))));\n      data.buffer.push(\"\\r\\n<div class=\\\"entry\\\">\\r\\n\t<div class=\\\"tagline\\\">\\r\\n\t\t<a href=\\\"javascript:void(0);\\\" class=\\\"expand\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleCollapse\", {\"name\":\"action\",\"hash\":{\n        'target': (\"view\")\n      },\"hashTypes\":{'target': \"ID\"},\"hashContexts\":{'target': depth0},\"types\":[\"STRING\"],\"contexts\":[depth0],\"data\":data})));\n      data.buffer.push(\">\\r\\n\");\n      stack1 = helpers['if'].call(depth0, \"view.isCollapsed\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(1, data),\"inverse\":this.program(3, data),\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\t\t</a>\\r\\n\t\t\");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"author\", \"user\", \"author\", {\"name\":\"link-to\",\"hash\":{\n        'class': (\"author\")\n      },\"hashTypes\":{'class': \"STRING\"},\"hashContexts\":{'class': depth0},\"types\":[\"ID\",\"STRING\",\"ID\"],\"contexts\":[depth0,depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"\\r\\n\t\t<span class=\\\"userattrs\\\"></span>\\r\\n\t\t<span class=\\\"score\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleCollapse\", {\"name\":\"action\",\"hash\":{\n        'target': (\"view\")\n      },\"hashTypes\":{'target': \"ID\"},\"hashContexts\":{'target': depth0},\"types\":[\"STRING\"],\"contexts\":[depth0],\"data\":data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"score\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"view.plurarizePoint\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\r\\n\t\t<time>\");\n      data.buffer.push(escapeExpression(((helpers['time-ago'] || (depth0 && depth0['time-ago']) || helperMissing).call(depth0, {\"name\":\"time-ago\",\"hash\":{\n        'datetime': (\"created_utc\")\n      },\"hashTypes\":{'datetime': \"ID\"},\"hashContexts\":{'datetime': depth0},\"types\":[],\"contexts\":[],\"data\":data}))));\n      data.buffer.push(\"</time>\\r\\n\t\t&nbsp;\\r\\n\");\n      stack1 = helpers['if'].call(depth0, \"view.isCollapsed\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(5, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\t</div>\\r\\n\\r\\n\");\n      stack1 = helpers.unless.call(depth0, \"view.isCollapsed\", {\"name\":\"unless\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(7, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\r\\n<div class=\\\"child\\\">\\r\\n\t<div class=\\\"sitetable listing\\\">\\r\\n\");\n      stack1 = helpers.each.call(depth0, \"child\", \"in\", \"view.children\", {\"name\":\"each\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(9, data),\"inverse\":this.noop,\"types\":[\"ID\",\"ID\",\"ID\"],\"contexts\":[depth0,depth0,depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\t</div>\\r\\n</div>\");\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/templates/t3row\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n      var stack1, escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"\t\t\t<span class=\\\"linkflairlabel\\\" \");\n      data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {\"name\":\"bind-attr\",\"hash\":{\n        'title': (\"link_flair_text\")\n      },\"hashTypes\":{'title': \"ID\"},\"hashContexts\":{'title': depth0},\"types\":[],\"contexts\":[],\"data\":data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"link_flair_text\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\r\\n\");\n      return buffer;\n    },\"3\":function(depth0,helpers,partials,data) {\n      var escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"\t\t<div \");\n      data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {\"name\":\"bind-attr\",\"hash\":{\n        'class': (\":expando-button :selftext view.isExpandoExpanded:expanded:collapsed\")\n      },\"hashTypes\":{'class': \"STRING\"},\"hashContexts\":{'class': depth0},\"types\":[],\"contexts\":[],\"data\":data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"expandExpando\", {\"name\":\"action\",\"hash\":{\n        'target': (\"view\")\n      },\"hashTypes\":{'target': \"ID\"},\"hashContexts\":{'target': depth0},\"types\":[\"STRING\"],\"contexts\":[depth0],\"data\":data})));\n      data.buffer.push(\"></div>\\r\\n\");\n      return buffer;\n    },\"5\":function(depth0,helpers,partials,data) {\n      var escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"\t\t<div \");\n      data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {\"name\":\"bind-attr\",\"hash\":{\n        'class': (\":expando-button :video view.isExpandoExpanded:expanded:collapsed\")\n      },\"hashTypes\":{'class': \"STRING\"},\"hashContexts\":{'class': depth0},\"types\":[],\"contexts\":[],\"data\":data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"expandExpando\", {\"name\":\"action\",\"hash\":{\n        'target': (\"view\")\n      },\"hashTypes\":{'target': \"ID\"},\"hashContexts\":{'target': depth0},\"types\":[\"STRING\"],\"contexts\":[depth0],\"data\":data})));\n      data.buffer.push(\"</div>\\r\\n\");\n      return buffer;\n    },\"7\":function(depth0,helpers,partials,data) {\n      data.buffer.push(\"\t\t\t<li class=\\\"rounded nsfw-stamp stamp\\\">\\r\\n\t\t\t\t<acronym title=\\\"Adult content: Not Safe For Work\\\">NSFW</acronym>\\r\\n\t\t\t</li>\\r\\n\");\n      },\"9\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      stack1 = helpers._triageMustache.call(depth0, \"num_comments\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\" comments\");\n      return buffer;\n    },\"11\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      stack1 = helpers['if'].call(depth0, \"view.isExpandoExpanded\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(12, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      return buffer;\n    },\"12\":function(depth0,helpers,partials,data) {\n      var helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"\t\t\t\");\n      data.buffer.push(escapeExpression(((helpers.partial || (depth0 && depth0.partial) || helperMissing).call(depth0, \"partials/self-text\", {\"name\":\"partial\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\"],\"contexts\":[depth0],\"data\":data}))));\n      data.buffer.push(\"\\r\\n\");\n      return buffer;\n    },\"14\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      stack1 = helpers['if'].call(depth0, \"view.isExpandoExpanded\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(15, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      return buffer;\n    },\"15\":function(depth0,helpers,partials,data) {\n      var helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"\t\t\t\");\n      data.buffer.push(escapeExpression(((helpers.partial || (depth0 && depth0.partial) || helperMissing).call(depth0, \"partials/media-embed\", {\"name\":\"partial\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\"],\"contexts\":[depth0],\"data\":data}))));\n      data.buffer.push(\"\\r\\n\");\n      return buffer;\n    },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"<p class=\\\"parent\\\"></p>\\r\\n<span class=\\\"rank\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"index\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\r\\n\");\n      data.buffer.push(escapeExpression(((helpers['vote-score'] || (depth0 && depth0['vote-score']) || helperMissing).call(depth0, {\"name\":\"vote-score\",\"hash\":{\n        'likes': (\"likes\"),\n        'score': (\"score\")\n      },\"hashTypes\":{'likes': \"ID\",'score': \"ID\"},\"hashContexts\":{'likes': depth0,'score': depth0},\"types\":[],\"contexts\":[],\"data\":data}))));\n      data.buffer.push(\"\\r\\n\");\n      data.buffer.push(escapeExpression(((helpers['thumbnail-preview'] || (depth0 && depth0['thumbnail-preview']) || helperMissing).call(depth0, {\"name\":\"thumbnail-preview\",\"hash\":{\n        'isNsfw': (\"over_18\"),\n        'src': (\"thumbnail\"),\n        'url': (\"url\")\n      },\"hashTypes\":{'isNsfw': \"ID\",'src': \"ID\",'url': \"ID\"},\"hashContexts\":{'isNsfw': depth0,'src': depth0,'url': depth0},\"types\":[],\"contexts\":[],\"data\":data}))));\n      data.buffer.push(\"\\r\\n<div class=\\\"entry\\\">\\r\\n\t<p class=\\\"title\\\">\\r\\n\t\t<a \");\n      data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {\"name\":\"bind-attr\",\"hash\":{\n        'href': (\"url\")\n      },\"hashTypes\":{'href': \"ID\"},\"hashContexts\":{'href': depth0},\"types\":[],\"contexts\":[],\"data\":data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"</a>\\r\\n\");\n      stack1 = helpers['if'].call(depth0, \"view.hasLinkFlair\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(1, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\t\t<span class=\\\"domain\\\">(\");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"domain\", \"domain\", \"domain\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\",\"STRING\",\"ID\"],\"contexts\":[depth0,depth0,depth0],\"data\":data}))));\n      data.buffer.push(\")</span>\\r\\n\t</p>\\r\\n\");\n      stack1 = helpers['if'].call(depth0, \"view.hasSelfText\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(3, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      stack1 = helpers['if'].call(depth0, \"view.hasMediaEmbed\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(5, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\t<p class=\\\"tagline\\\">Submitted \");\n      data.buffer.push(escapeExpression(((helpers['time-ago'] || (depth0 && depth0['time-ago']) || helperMissing).call(depth0, {\"name\":\"time-ago\",\"hash\":{\n        'datetime': (\"created_utc\")\n      },\"hashTypes\":{'datetime': \"ID\"},\"hashContexts\":{'datetime': depth0},\"types\":[],\"contexts\":[],\"data\":data}))));\n      data.buffer.push(\" by \");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"author\", \"user\", \"author\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\",\"STRING\",\"ID\"],\"contexts\":[depth0,depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"</p>\\r\\n\t<ul class=\\\"flat-list buttons\\\">\\r\\n\");\n      stack1 = helpers['if'].call(depth0, \"over_18\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(7, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\t\t<li class=\\\"first\\\">\\r\\n\t\t\t\");\n      stack1 = ((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"comments\", \"subreddit\", \"id\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(9, data),\"inverse\":this.noop,\"types\":[\"STRING\",\"ID\",\"ID\"],\"contexts\":[depth0,depth0,depth0],\"data\":data}));\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\r\\n\t\t</li>\\r\\n\t\t<li class=\\\"share\\\"></li>\\r\\n\t</ul>\\r\\n\");\n      stack1 = helpers['if'].call(depth0, \"view.hasSelfText\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(11, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      stack1 = helpers['if'].call(depth0, \"view.hasMediaEmbed\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(14, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\r\\n\");\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/templates/tabmenu/comments\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"<span class=\\\"hover pagename redditname\\\">\\r\\n\t\");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"currentSub\", \"subreddit.index\", \"currentSub\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\",\"STRING\",\"ID\"],\"contexts\":[depth0,depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"\\r\\n</span>\\r\\n<ul class=\\\"tabmenu\\\">\\r\\n\t<li>\");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"comments\", \"comments\", \"currentSub\", \"postThing.data.id\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\",\"STRING\",\"ID\",\"ID\"],\"contexts\":[depth0,depth0,depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"</li>\\r\\n\t<li>\");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"related\", \"related\", \"currentSub\", \"postThing.data.id\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\",\"STRING\",\"ID\",\"ID\"],\"contexts\":[depth0,depth0,depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"</li>\\r\\n</ul>\");\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/templates/tabmenu/subreddit\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"<span class=\\\"hover pagename redditname\\\">\\r\\n\t\");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"currentSub\", \"subreddit.index\", \"currentSub\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\",\"STRING\",\"ID\"],\"contexts\":[depth0,depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"\\r\\n</span>\\r\\n<ul class=\\\"tabmenu\\\">\\r\\n\t<li>\");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"hot\", \"subreddit.index\", \"currentSub\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\",\"STRING\",\"ID\"],\"contexts\":[depth0,depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"</li>\\r\\n\t<li>\");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"new\", \"subreddit.sort\", \"currentSub\", \"new\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\",\"STRING\",\"ID\",\"STRING\"],\"contexts\":[depth0,depth0,depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"</li>\\r\\n\t<li>\");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"rising\", \"subreddit.sort\", \"currentSub\", \"rising\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\",\"STRING\",\"ID\",\"STRING\"],\"contexts\":[depth0,depth0,depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"</li>\\r\\n\t<li>\");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"controversial\", \"subreddit.sort\", \"currentSub\", \"controversial\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\",\"STRING\",\"ID\",\"STRING\"],\"contexts\":[depth0,depth0,depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"</li>\\r\\n\t<li>\");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"top\", \"subreddit.sort\", \"currentSub\", \"top\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\",\"STRING\",\"ID\",\"STRING\"],\"contexts\":[depth0,depth0,depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"</li>\\r\\n\t<li>\");\n      data.buffer.push(escapeExpression(((helpers['link-to'] || (depth0 && depth0['link-to']) || helperMissing).call(depth0, \"gilded\", \"subreddit.sort\", \"currentSub\", \"gilded\", {\"name\":\"link-to\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"STRING\",\"STRING\",\"ID\",\"STRING\"],\"contexts\":[depth0,depth0,depth0,depth0],\"data\":data}))));\n      data.buffer.push(\"</li>\\r\\n</ul>\");\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/templates/thing\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n      var escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"\t\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"t1row\", {\"name\":\"view\",\"hash\":{\n        'context': (\"data\")\n      },\"hashTypes\":{'context': \"ID\"},\"hashContexts\":{'context': depth0},\"types\":[\"STRING\"],\"contexts\":[depth0],\"data\":data})));\n      data.buffer.push(\"\\r\\n\");\n      return buffer;\n    },\"3\":function(depth0,helpers,partials,data) {\n      data.buffer.push(\"\t\\r\\n\");\n      },\"5\":function(depth0,helpers,partials,data) {\n      var escapeExpression=this.escapeExpression, buffer = '';\n      data.buffer.push(\"\t\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"t3row\", {\"name\":\"view\",\"hash\":{\n        'context': (\"data\")\n      },\"hashTypes\":{'context': \"ID\"},\"hashContexts\":{'context': depth0},\"types\":[\"STRING\"],\"contexts\":[depth0],\"data\":data})));\n      data.buffer.push(\"\t\\r\\n\");\n      return buffer;\n    },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      stack1 = helpers['if'].call(depth0, \"isT1\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(1, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      stack1 = helpers['if'].call(depth0, \"isT2\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(3, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      stack1 = helpers['if'].call(depth0, \"isT3\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(5, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      stack1 = helpers['if'].call(depth0, \"isT4\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(3, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      stack1 = helpers['if'].call(depth0, \"isT5\", {\"name\":\"if\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(3, data),\"inverse\":this.noop,\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"<div class=\\\"clearleft\\\"></div>\");\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/templates/user\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      data.buffer.push(\"\t\t<li>\\n\t\t\t\");\n      stack1 = helpers._triageMustache.call(depth0, \"item.kind\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\" - \");\n      stack1 = helpers._triageMustache.call(depth0, \"item.data.id\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\t\t</li>\\n\");\n      return buffer;\n    },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n      var stack1, buffer = '';\n      data.buffer.push(\"<ul>\\n\");\n      stack1 = helpers.each.call(depth0, \"item\", \"in\", \"model.children\", {\"name\":\"each\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"fn\":this.program(1, data),\"inverse\":this.noop,\"types\":[\"ID\",\"ID\",\"ID\"],\"contexts\":[depth0,depth0,depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      data.buffer.push(\"</ul>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {\"name\":\"_triageMustache\",\"hash\":{},\"hashTypes\":{},\"hashContexts\":{},\"types\":[\"ID\"],\"contexts\":[depth0],\"data\":data});\n      if (stack1 != null) { data.buffer.push(stack1); }\n      return buffer;\n    },\"useData\":true});\n  });","define(\"ember-reddit/tests/adapters/about.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - adapters');\n    test('adapters/about.js should pass jshint', function() { \n      ok(false, 'adapters/about.js should pass jshint.\\nadapters/about.js: line 29, col 15, Missing semicolon.\\nadapters/about.js: line 4, col 8, \\'parseListing\\' is defined but never used.\\n\\n2 errors'); \n    });\n  });","define(\"ember-reddit/tests/adapters/comments.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - adapters');\n    test('adapters/comments.js should pass jshint', function() { \n      ok(true, 'adapters/comments.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/adapters/subreddit.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - adapters');\n    test('adapters/subreddit.js should pass jshint', function() { \n      ok(false, 'adapters/subreddit.js should pass jshint.\\nadapters/subreddit.js: line 3, col 8, \\'thing\\' is defined but never used.\\n\\n1 error'); \n    });\n  });","define(\"ember-reddit/tests/adapters/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - adapters');\n    test('adapters/user.js should pass jshint', function() { \n      ok(true, 'adapters/user.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - .');\n    test('app.js should pass jshint', function() { \n      ok(true, 'app.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/components/thumbnail-preview.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - components');\n    test('components/thumbnail-preview.js should pass jshint', function() { \n      ok(true, 'components/thumbnail-preview.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/components/time-ago.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - components');\n    test('components/time-ago.js should pass jshint', function() { \n      ok(true, 'components/time-ago.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/components/vote-score.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - components');\n    test('components/vote-score.js should pass jshint', function() { \n      ok(true, 'components/vote-score.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/controllers/comments.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - controllers');\n    test('controllers/comments.js should pass jshint', function() { \n      ok(true, 'controllers/comments.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/controllers/sidepanel.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - controllers');\n    test('controllers/sidepanel.js should pass jshint', function() { \n      ok(true, 'controllers/sidepanel.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/controllers/subreddit.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - controllers');\n    test('controllers/subreddit.js should pass jshint', function() { \n      ok(true, 'controllers/subreddit.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/helpers');\n    test('ember-reddit/tests/helpers/resolver.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/helpers/resolver.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/helpers');\n    test('ember-reddit/tests/helpers/start-app.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/helpers/start-app.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests');\n    test('ember-reddit/tests/test-helper.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/test-helper.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/adapters/about-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/adapters');\n    test('ember-reddit/tests/unit/adapters/about-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/adapters/about-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/adapters/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/adapters');\n    test('ember-reddit/tests/unit/adapters/application-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/adapters/application-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/adapters/comments-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/adapters');\n    test('ember-reddit/tests/unit/adapters/comments-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/adapters/comments-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/adapters/subreddit-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/adapters');\n    test('ember-reddit/tests/unit/adapters/subreddit-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/adapters/subreddit-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/adapters/user-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/adapters');\n    test('ember-reddit/tests/unit/adapters/user-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/adapters/user-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/components/thumbnail-preview-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/components');\n    test('ember-reddit/tests/unit/components/thumbnail-preview-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/components/thumbnail-preview-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/components/time-ago-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/components');\n    test('ember-reddit/tests/unit/components/time-ago-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/components/time-ago-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/components/vote-score-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/components');\n    test('ember-reddit/tests/unit/components/vote-score-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/components/vote-score-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/controllers/comments-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/controllers');\n    test('ember-reddit/tests/unit/controllers/comments-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/controllers/comments-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/controllers/sidepanel-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/controllers');\n    test('ember-reddit/tests/unit/controllers/sidepanel-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/controllers/sidepanel-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/controllers/subreddit-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/controllers');\n    test('ember-reddit/tests/unit/controllers/subreddit-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/controllers/subreddit-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/helpers/format-number-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/helpers');\n    test('ember-reddit/tests/unit/helpers/format-number-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/helpers/format-number-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/initializers/inject-store-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/initializers');\n    test('ember-reddit/tests/unit/initializers/inject-store-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/initializers/inject-store-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/mixins/subreddit-route-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/mixins');\n    test('ember-reddit/tests/unit/mixins/subreddit-route-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/mixins/subreddit-route-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/models/thing-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/models');\n    test('ember-reddit/tests/unit/models/thing-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/models/thing-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/routes/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/routes');\n    test('ember-reddit/tests/unit/routes/application-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/routes/application-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/routes/comments-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/routes');\n    test('ember-reddit/tests/unit/routes/comments-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/routes/comments-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/routes/index-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/routes');\n    test('ember-reddit/tests/unit/routes/index-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/routes/index-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/routes/subreddit-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/routes');\n    test('ember-reddit/tests/unit/routes/subreddit-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/routes/subreddit-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/routes/subreddit/index-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/routes/subreddit');\n    test('ember-reddit/tests/unit/routes/subreddit/index-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/routes/subreddit/index-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/routes/subreddit/related-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/routes/subreddit');\n    test('ember-reddit/tests/unit/routes/subreddit/related-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/routes/subreddit/related-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/routes/subreddit/sort-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/routes/subreddit');\n    test('ember-reddit/tests/unit/routes/subreddit/sort-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/routes/subreddit/sort-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/routes/user-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/routes');\n    test('ember-reddit/tests/unit/routes/user-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/routes/user-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/utils/calc-children-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/utils');\n    test('ember-reddit/tests/unit/utils/calc-children-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/utils/calc-children-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/utils/decode-html-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/utils');\n    test('ember-reddit/tests/unit/utils/decode-html-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/utils/decode-html-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/utils/parse-listing-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/utils');\n    test('ember-reddit/tests/unit/utils/parse-listing-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/utils/parse-listing-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/views/t1row-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/views');\n    test('ember-reddit/tests/unit/views/t1row-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/views/t1row-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/ember-reddit/tests/unit/views/t3row-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - ember-reddit/tests/unit/views');\n    test('ember-reddit/tests/unit/views/t3row-test.js should pass jshint', function() { \n      ok(true, 'ember-reddit/tests/unit/views/t3row-test.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/helpers/format-number.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - helpers');\n    test('helpers/format-number.js should pass jshint', function() { \n      ok(true, 'helpers/format-number.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/helpers/resolver\", \n  [\"ember/resolver\",\"ember-reddit/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });","define(\"ember-reddit/tests/helpers/start-app\", \n  [\"ember\",\"ember-reddit/app\",\"ember-reddit/router\",\"ember-reddit/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: 'none'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn't be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });","define(\"ember-reddit/tests/initializers/inject-store.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - initializers');\n    test('initializers/inject-store.js should pass jshint', function() { \n      ok(true, 'initializers/inject-store.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/mixins/subreddit-route.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - mixins');\n    test('mixins/subreddit-route.js should pass jshint', function() { \n      ok(false, 'mixins/subreddit-route.js should pass jshint.\\nmixins/subreddit-route.js: line 24, col 33, \\'transition\\' is defined but never used.\\nmixins/subreddit-route.js: line 24, col 26, \\'model\\' is defined but never used.\\n\\n2 errors'); \n    });\n  });","define(\"ember-reddit/tests/models/store.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - models');\n    test('models/store.js should pass jshint', function() { \n      ok(true, 'models/store.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/models/thing.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - models');\n    test('models/thing.js should pass jshint', function() { \n      ok(true, 'models/thing.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - .');\n    test('router.js should pass jshint', function() { \n      ok(false, 'router.js should pass jshint.\\nrouter.js: line 13, col 60, Missing semicolon.\\n\\n1 error'); \n    });\n  });","define(\"ember-reddit/tests/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes');\n    test('routes/application.js should pass jshint', function() { \n      ok(true, 'routes/application.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/routes/comments.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes');\n    test('routes/comments.js should pass jshint', function() { \n      ok(true, 'routes/comments.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/routes/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes');\n    test('routes/index.js should pass jshint', function() { \n      ok(true, 'routes/index.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/routes/subreddit.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes');\n    test('routes/subreddit.js should pass jshint', function() { \n      ok(true, 'routes/subreddit.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/routes/subreddit/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes/subreddit');\n    test('routes/subreddit/index.js should pass jshint', function() { \n      ok(true, 'routes/subreddit/index.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/routes/subreddit/related.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes/subreddit');\n    test('routes/subreddit/related.js should pass jshint', function() { \n      ok(true, 'routes/subreddit/related.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/routes/subreddit/sort.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes/subreddit');\n    test('routes/subreddit/sort.js should pass jshint', function() { \n      ok(true, 'routes/subreddit/sort.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/routes/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes');\n    test('routes/user.js should pass jshint', function() { \n      ok(true, 'routes/user.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/test-helper\", \n  [\"ember-reddit/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write('<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>');\n\n    QUnit.config.urlConfig.push({ id: 'nocontainer', label: 'Hide container'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? 'hidden' : 'visible';\n    document.getElementById('ember-testing-container').style.visibility = containerVisibility;\n  });","define(\"ember-reddit/tests/unit/adapters/about-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('adapter:about', 'AboutAdapter', {\n      // Specify the other units that are required for this test.\n      // needs: ['serializer:foo']\n    });\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var adapter = this.subject();\n      ok(adapter);\n    });\n  });","define(\"ember-reddit/tests/unit/adapters/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('adapter:application', 'ApplicationAdapter', {\n      // Specify the other units that are required for this test.\n      // needs: ['serializer:foo']\n    });\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var adapter = this.subject();\n      ok(adapter);\n    });\n  });","define(\"ember-reddit/tests/unit/adapters/comments-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('adapter:comments', 'CommentsAdapter', {\n      // Specify the other units that are required for this test.\n      // needs: ['serializer:foo']\n    });\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var adapter = this.subject();\n      ok(adapter);\n    });\n  });","define(\"ember-reddit/tests/unit/adapters/subreddit-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('adapter:subreddit', 'SubredditAdapter', {\n      // Specify the other units that are required for this test.\n      // needs: ['serializer:foo']\n    });\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var adapter = this.subject();\n      ok(adapter);\n    });\n  });","define(\"ember-reddit/tests/unit/adapters/user-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('adapter:user', 'UserAdapter', {\n      // Specify the other units that are required for this test.\n      // needs: ['serializer:foo']\n    });\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var adapter = this.subject();\n      ok(adapter);\n    });\n  });","define(\"ember-reddit/tests/unit/components/thumbnail-preview-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    var test = __dependency1__.test;\n\n    moduleForComponent('thumbnail-preview', 'ThumbnailPreviewComponent', {\n      // specify the other units that are required for this test\n      // needs: ['component:foo', 'helper:bar']\n    });\n\n    test('it renders', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component._state, 'preRender');\n\n      // appends the component to the page\n      this.append();\n      equal(component._state, 'inDOM');\n    });\n  });","define(\"ember-reddit/tests/unit/components/time-ago-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    var test = __dependency1__.test;\n\n    moduleForComponent('time-ago', 'TimeAgoComponent', {\n      // specify the other units that are required for this test\n      // needs: ['component:foo', 'helper:bar']\n    });\n\n    test('it renders', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component._state, 'preRender');\n\n      // appends the component to the page\n      this.append();\n      equal(component._state, 'inDOM');\n    });\n  });","define(\"ember-reddit/tests/unit/components/vote-score-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    var test = __dependency1__.test;\n\n    moduleForComponent('vote-score', 'VoteScoreComponent', {\n      // specify the other units that are required for this test\n      // needs: ['component:foo', 'helper:bar']\n    });\n\n    test('it renders', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component._state, 'preRender');\n\n      // appends the component to the page\n      this.append();\n      equal(component._state, 'inDOM');\n    });\n  });","define(\"ember-reddit/tests/unit/controllers/comments-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('controller:comments', 'CommentsController', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });","define(\"ember-reddit/tests/unit/controllers/sidepanel-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('controller:sidepanel', 'SidepanelController', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });","define(\"ember-reddit/tests/unit/controllers/subreddit-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('controller:subreddit', 'SubredditController', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });","define(\"ember-reddit/tests/unit/helpers/format-number-test\", \n  [\"ember-reddit/helpers/format-number\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var formatNumber = __dependency1__.formatNumber;\n\n    module('FormatNumberHelper');\n\n    // Replace this with your real tests.\n    test('it works', function() {\n      var result = formatNumber(42);\n      ok(result);\n    });\n  });","define(\"ember-reddit/tests/unit/initializers/inject-store-test\", \n  [\"ember\",\"ember-reddit/initializers/inject-store\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var initialize = __dependency2__.initialize;\n\n    var container, application;\n\n    module('InjectStoreInitializer', {\n      setup: function() {\n        Ember.run(function() {\n          container = new Ember.Container();\n          application = Ember.Application.create();\n          application.deferReadiness();\n        });\n      }\n    });\n\n    // Replace this with your real tests.\n    test('it works', function() {\n      initialize(container, application);\n\n      // you would normally confirm the results of the initializer here\n      ok(true);\n    });\n  });","define(\"ember-reddit/tests/unit/mixins/subreddit-route-test\", \n  [\"ember\",\"ember-reddit/mixins/subreddit-route\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SubredditRouteMixin = __dependency2__[\"default\"];\n\n    module('SubredditRouteMixin');\n\n    // Replace this with your real tests.\n    test('it works', function() {\n      var SubredditRouteObject = Ember.Object.extend(SubredditRouteMixin);\n      var subject = SubredditRouteObject.create();\n      ok(subject);\n    });\n  });","define(\"ember-reddit/tests/unit/models/thing-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel('thing', 'Thing', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test('it exists', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });","define(\"ember-reddit/tests/unit/routes/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('route:application', 'ApplicationRoute', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    test('it exists', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });","define(\"ember-reddit/tests/unit/routes/comments-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('route:comments', 'CommentsRoute', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    test('it exists', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });","define(\"ember-reddit/tests/unit/routes/index-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('route:index', 'IndexRoute', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    test('it exists', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });","define(\"ember-reddit/tests/unit/routes/subreddit-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('route:subreddit', 'SubredditRoute', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    test('it exists', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });","define(\"ember-reddit/tests/unit/routes/subreddit/index-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('route:subreddit/index', 'SubredditIndexRoute', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    test('it exists', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });","define(\"ember-reddit/tests/unit/routes/subreddit/related-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('route:subreddit/related', 'SubredditRelatedRoute', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    test('it exists', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });","define(\"ember-reddit/tests/unit/routes/subreddit/sort-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('route:subreddit/sort', 'SubredditSortRoute', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    test('it exists', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });","define(\"ember-reddit/tests/unit/routes/user-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('route:user', 'UserRoute', {\n      // Specify the other units that are required for this test.\n      // needs: ['controller:foo']\n    });\n\n    test('it exists', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });","define(\"ember-reddit/tests/unit/utils/calc-children-test\", \n  [\"ember-reddit/utils/calc-children\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var calcChildren = __dependency1__[\"default\"];\n\n    module('calcChildren');\n\n    // Replace this with your real tests.\n    test('it works', function() {\n      var result = calcChildren();\n      ok(result);\n    });\n  });","define(\"ember-reddit/tests/unit/utils/decode-html-test\", \n  [\"ember-reddit/utils/decode-html\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var decodeHtml = __dependency1__[\"default\"];\n\n    module('decodeHtml');\n\n    // Replace this with your real tests.\n    test('it works', function() {\n      var result = decodeHtml();\n      ok(result);\n    });\n  });","define(\"ember-reddit/tests/unit/utils/parse-listing-test\", \n  [\"ember-reddit/utils/parse-listing\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var parseListing = __dependency1__[\"default\"];\n\n    module('parseListing');\n\n    // Replace this with your real tests.\n    test('it works', function() {\n      var result = parseListing();\n      ok(result);\n    });\n  });","define(\"ember-reddit/tests/unit/views/t1row-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('view:t1row', 'T1rowView');\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var view = this.subject();\n      ok(view);\n    });\n  });","define(\"ember-reddit/tests/unit/views/t3row-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor('view:t3row', 'T3rowView');\n\n    // Replace this with your real tests.\n    test('it exists', function() {\n      var view = this.subject();\n      ok(view);\n    });\n  });","define(\"ember-reddit/tests/utils/calc-children.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - utils');\n    test('utils/calc-children.js should pass jshint', function() { \n      ok(true, 'utils/calc-children.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/utils/decode-html.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - utils');\n    test('utils/decode-html.js should pass jshint', function() { \n      ok(true, 'utils/decode-html.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/utils/parse-listing.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - utils');\n    test('utils/parse-listing.js should pass jshint', function() { \n      ok(true, 'utils/parse-listing.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/views/t1row.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - views');\n    test('views/t1row.js should pass jshint', function() { \n      ok(true, 'views/t1row.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/tests/views/t3row.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - views');\n    test('views/t3row.js should pass jshint', function() { \n      ok(true, 'views/t3row.js should pass jshint.'); \n    });\n  });","define(\"ember-reddit/utils/calc-children\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n\n    var calcChildren = function(thing) {\n    \tvar total = 0;\n\n    \tif (thing && thing.get('children')) {\n    \t\ttotal += thing.get('children').length;\n\n    \t\tfor (var i = 0; i < thing.get('children').length; i++) {\n\n    \t\t\tvar childData = thing.get('children')[i].get('data');\n\n    \t\t\tif (childData.replies) {\n    \t\t\t\ttotal += calcChildren(childData.replies);\n    \t\t\t}\n    \t\t}\n    \t}\n\n    \treturn total;\n    };\n\n    __exports__[\"default\"] = calcChildren ;\n  });","define(\"ember-reddit/utils/decode-html\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function decodeHtml(html) {\n    \treturn Ember.$('<div>').html(html).text();\n    }\n  });","define(\"ember-reddit/utils/parse-listing\", \n  [\"ember\",\"ember-reddit/models/thing\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var thing = __dependency2__[\"default\"];\n\n    var parseListing = function(listing) {\n    \t\n    \treturn Ember.Object.create({\n    \t\tmodhash: listing.data.modhash,\n    \t\tchildren: listing.data.children.map(function (child) {\n    \t\t\tif (!!child.data) {\n    \t\t\t\tif (!!child.data.replies && !!child.data.replies.data) {\n    \t\t\t\t\tchild.data.replies = parseListing(child.data.replies);\n    \t\t\t\t}\n    \t\t\t}\n\n    \t\t\treturn thing.create(child);\n    \t\t}),\n    \t\tafter: listing.data.after,\n    \t\tbefore: listing.data.before\n    \t});\n    };\n\n    __exports__[\"default\"] = parseListing;\n  });","define(\"ember-reddit/views/t1row\", \n  [\"ember\",\"ember-reddit/utils/calc-children\",\"ember-reddit/utils/decode-html\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var calcChildren = __dependency2__[\"default\"];\n    var decodeHtml = __dependency3__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n    \ttemplateName: 't1row',\n    \tclassNames: ['t1', 'comment'],\n    \tclassNameBindings: ['isCollapsed:collapsed:noncollapsed'],\n\n    \tisCollapsed: false,\n\n    \trenderedBody: Ember.computed('context.body_html', function() {\n    \t\treturn decodeHtml(this.get('context.body_html'));\n    \t}),\n\n    \tactions: {\n    \t\ttoggleCollapse: function() {\n    \t\t\tthis.toggleProperty('isCollapsed');\n    \t\t}\n    \t},\n\n    \thasChildren: Ember.computed('context.replies', function() {\n    \t\treturn !!this.get('context.replies.children') && this.get('context.replies.children').length;\n    \t}),\n\n    \tchildren: Ember.computed('context.replies', function() {\n    \t\treturn this.get('context.replies.children');\n    \t}),\n\n    \tnumChildren: Ember.computed('context.replies', function() {\n    \t\treturn calcChildren(this.get('context.replies'));\n    \t}),\n\n    \tplurarizeChild: Ember.computed('numChildren', function() {\n    \t\treturn this.get('numChildren') === 1 ? 'child' : 'children';\n    \t}),\n\n    \tplurarizePoint: Ember.computed('context.score', function() {\n    \t\treturn this.get('context.score') === 1 ? 'point' : 'points';\n    \t})\n    });\n  });","define(\"ember-reddit/views/t3row\", \n  [\"ember\",\"ember-reddit/utils/decode-html\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var decodeHtml = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n    \ttemplateName: 't3row',\n    \tclassNames: ['t3', 'link'],\n    \tclassNameBindings: ['hasLinkFlair:linkflair'],\n\n    \thasSelfText: Ember.computed('context.selftext_html', function() {\n    \t\treturn !!this.get('context.selftext_html');\n    \t}),\n\n    \trenderedSelfText: Ember.computed('context.selftext_html', function() {\n    \t\treturn decodeHtml(this.get('context.selftext_html'));\n    \t}),\n\n    \thasMediaEmbed: Ember.computed('context.media_embed', function() {\n    \t\treturn !!this.get('context.media_embed').content;\n    \t}),\n\n    \trenderedMediaEmbed: Ember.computed('context.media_embed', function() {\n    \t\treturn decodeHtml(this.get('context.media_embed').content);\n    \t}),\n\n    \tisExpandoExpanded: false,\n\n    \thasLinkFlair: Ember.computed('context.link_flair_text', function() {\n    \t\treturn !!this.get('context.link_flair_text');\n    \t}),\n\n    \tactions: {\n    \t\texpandExpando: function() {\n    \t\t\tthis.toggleProperty('isExpandoExpanded');\n    \t\t}\n    \t}\n    });\n  });","/* jshint ignore:start */\n\ndefine('ember-reddit/config/environment', ['ember'], function(Ember) {\n  var prefix = 'ember-reddit';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"ember-reddit/tests/test-helper\");\n} else {\n  require(\"ember-reddit/app\")[\"default\"].create({\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"ember-reddit.js"}